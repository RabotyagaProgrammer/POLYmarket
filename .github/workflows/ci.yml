name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build & Deploy
    runs-on: ubuntu-latest

    steps:
      # 1. Клонируем код
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Устанавливаем Python с кешем pip
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      # 3. Устанавливаем зависимости
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # === Убраны шаги с pytest! ===

      # 4. Сборка Docker-образа
      - name: Build Docker image
        run: docker build -t myapp:${{ github.sha }} .

      # 5. Сохранение Docker-образа как артефакт
      - name: Save Docker image
        run: docker save myapp:${{ github.sha }} | gzip > myapp_${{ github.sha }}.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: myapp_${{ github.sha }}.tar.gz

  security:
    name: Static Analysis (Bandit)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Bandit
        run: pip install bandit

      - name: Run Bandit
        run: bandit -r . -f json -o bandit.json --exit-zero